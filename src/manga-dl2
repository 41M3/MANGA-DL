#!/bin/sh
#title           :manga-dl2
#description     :download japscan's manga
#author		 :41M3
#start date      :10 APR. 2018
#version         :2
#usage		 :manga-dl2
#notes           :check the japscan link for args
#bash_version    :4.4.19
#==============================================================================

###HELP###
function for_help {
    echo "======================================================================================="
    echo "              Manga downloader for japscan and scan-vf"
    echo ""
    echo " USAGE: 'manga-dl2' or 'manga-dl2 -h' or 'manga-dl2 --help'"
    echo ""
    echo "      REQUIRED:"
    echo "      ++> The web site: japscan or manga-vf"
    echo "      ++> The manga's name in the site's URL"
    echo "      ++> The number of the first chapter/volume that you want"
    echo "      ++> The number of the last chapter/volume that you want"
    echo "      ++> The nuber of pages in the chapter/volume"
    echo "      ++> The name that you want for the compressed CBZ file"
    echo ""
    echo "      EXEMPLE:"
    echo "          Site for downloading [1 : japscan] or [2 : scan-vf] : 1"
    echo "          Manga's name [dr-stone/], [young-gto/volume-] or [one_piece] : dr-stone/"
    echo "          Value for first chapter/volume : 1"
    echo "          Value for last chapter/volume : 3"
    echo "          Value for pages nbr : 100"
    echo "          Compression's name [DR_STONE] or [Y-Gto] : Y-GTO"
    echo ""
    echo "======================================================================================="
    exit 0
}

if [[ $1 == "-h" || $1 == "--help" ]];
then
    for_help
fi

###VALUES###
read -p "Site for downloading [1 : japscan], [2 : scan-vf] or [3 : scan-fr] : " site
read -p "Manga's name [dr-stone/], [young-gto/volume-] or [one_piece] : " name
read -p "Value for first chapter/volume : " first
read -p "Value for last chapter/volume : " last
read -p "Value for pages nbr : " pages
read -p "Compression's name [DR_STONE] or [Y-Gto] : " namec
count=0

###ARGS ARE INTEGERS###
if [[ $site != +([1-3]) || $first != +([0-9]) || $last != +([0-9]) || $pages != +([0-9]) ]];
then
    echo "Bad Type Of Args!"
    for_help
fi

###WORK CHAPTER/VOLUME###
fh_time=$(date +%H)
fm_time=$(date +%M)
fs_time=$(date +%S)
for j in `seq $first $last`;
do
    mkdir $j
    cd $j

###WORK PAGES###
    for i in `seq 1 $pages`;
    do

###PROPOTYPE LIEN###
	if [[ $site == 1 ]];
	then
	   wget -nd -H -p -A jpg,jpeg,png -e robots=off http://www.japscan.cc/lecture-en-ligne/$name$j/$i.html &> /dev/null
	elif [[ $site == 2 ]];
	then
	    wget -nd -H -p -A jpg,jpeg,png -e robots=off http://ww2.scan-vf.com/$name/chapitre-$j/$i &> /dev/null
	elif [[ $site == 3 ]];
	then
	    wget -nd -H -p -A jpg,jpeg,png -e robots=off http://www.scan-fr.io/manga/$name/$j/$i &> /dev/null
	else
	    wget -nd -H -p -A jpg,jpeg,png -e robots=off http://www.japscan.cc/lecture-en-ligne/$name$j/$i.html &> /dev/null
	fi
    done
    cd ..
    zip -r $namec$j.cbz $j $> /dev/null
    rm -rf $j
    if [[ $first != 1 ]];
    then
	((count++))
	echo -e "\e[1m\e[44m Finished file $count/$((last-first+1)) : $((count*100/(last-first+1)))% \e[0m"
    else
	echo -e "\e[1m\e[44m Finished file $j/$last : $((j*100/last))% \e[0m"
    fi
done
lh_time=$(($(date +%H)-fh_time))
lm_time=$(($(date +%M)-fm_time))
ls_time=$(($(date +%S)-fs_time))
echo -e "\e[1m\e[101m      END !      \e[0m"
echo "==================================================================="
echo -e "        Start : $fh_time:$fm_time:$fs_time  _  End : $(date +%H):$(date +%M):$(date +%S)"
echo -e "        Time elapsed : $lh_time hours, $lm_time minutes, $ls_time seconds"
echo "==================================================================="

exit 0
