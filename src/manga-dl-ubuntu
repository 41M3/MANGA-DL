#!/bin/bash
#title           :manga-dl2
#description     :download japscan's manga
#author		 :41M3
#start date      :10 APR. 2018
#version         :2
#usage		 :manga-dl2
#notes           :check the japscan link for args
#bash_version    :4.4.19
#==============================================================================

clear

###HELP###
for_help () {
  echo "======================================================================================="
  echo "              Manga downloader for japscan and scan-vf"
  echo ""
  echo " USAGE: 'manga-dl2' or 'manga-dl2 -h' or 'manga-dl2 --help'"
  echo ""
  echo "      REQUIRED:"
  echo "      ++> The web site: japscan or manga-vf"
  echo "      ++> The manga's name in the site's URL"
  echo "      ++> The number of the first chapter/volume that you want"
  echo "      ++> The number of the last chapter/volume that you want"
  echo "      ++> The nuber of pages in the chapter/volume"
  echo "      ++> The name that you want for the compressed CBZ file"
  echo ""
  echo "      EXEMPLE:"
  echo "          Site for downloading [1 : japscan] or [2 : scan-vf] : 1"
  echo "          Manga's name [dr-stone/], [young-gto/volume-] or [one_piece] : dr-stone/"
  echo "          Value for first chapter/volume : 1"
  echo "          Value for last chapter/volume : 3"
  echo "          Value for pages nbr : 100"
  echo "          Compression's name [DR_STONE] or [Y-Gto] : Y-GTO"
  echo ""
  echo "      SETTINGS:"
  cat ./setmangadll
  echo "======================================================================================="
  exit 0
}

end () {
  lh_time=$(($(date +%H)-fh_time))
  lm_time=$(($(date +%M)-fm_time))
  ls_time=$(($(date +%S)-fs_time))
  echo -e "\e[1m\e[101m      END !      \e[0m"
  echo "==================================================================="
  echo -e "        Start : $fh_time:$fm_time:$fs_time  _  End : $(date +%H):$(date +%M):$(date +%S)"
  echo -e "        Time elapsed : $lh_time hours, $lm_time minutes, $ls_time seconds"
  echo "==================================================================="

  exit 0
}

setVar () {
  touch ./setmangadll
  read -p "Site for downloading: [1 : lecture-enligne.com]  [2 : NAN]
==> " site
  echo "VARSITE=\"$site\"" > ./setmangadll
  read -p "Manga's name [dr-stone/], [young-gto/volume-] or [one_piece] :
==> " name
  echo "VARNAME=\"$name\"" >> ./setmangadll
  read -p "Value for pages nbr :
==> " pages
  echo "VARPAGES=\"$pages\"" >> ./setmangadll
}

initVar () {
  if [ -e ./setmangadll ]; then
    source ./setmangadll
    site=$VARSITE
    name=$VARNAME
    pages=$VARPAGES
  else
    setVar
  fi
}

delVar () {
  rm ./setmangadll
exit 0
}

onlyOne () {
  fh_time=$(date +%H)
  fm_time=$(date +%M)
  fs_time=$(date +%S)

  initVar

  read -p "Value for chapter/volume : " nb

  mkdir $nb
  cd $nb

  for i in `seq 0 $pages`;
  do
    case $site in
      1) wget -nd -H -p -A jpg,jpeg,png -e robots=off "https://lecture-enligne.com/scan-$name-lecture-en-ligne/$nb/$i" &> /dev/null ;;
      2) wget -nd -H -p -A jpg,jpeg,png -e robots=off "http://ww2.scan-vf.net/$name/chapitre-$j/$i" &> /dev/null ;;
      3) wget -nd -H -p -A jpg,jpeg,png -e robots=off "http://www.scan-fr.co/manga/$name/$j/$i" &> /dev/null ;;
      4) wget -nd -H -p -A jpg,jpeg,png -e robots=off "https://www.lelscan-vf.com/manga/$name/$j/$i" &> /dev/null ;;
    esac
  done

  cd ..
  zip -r $name$nb.cbz $nb $> /dev/null
  rm -rf $nb
  end
}

multiRun () {
  fh_time=$(date +%H)
  fm_time=$(date +%M)
  fs_time=$(date +%S)
  initVar
  ###VALUES###
  #read -p "Site for downloading [1 : japscan], [2 : scan-vf] or [3 : scan-fr] : " site
  #read -p "Manga's name [dr-stone/], [young-gto/volume-] or [one_piece] : " name
  read -p "Value for first chapter/volume : " first
  read -p "Value for last chapter/volume : " last
  #read -p "Value for pages nbr : " pages
  #read -p "Compression's name [DR_STONE] or [Y-Gto] : " namec
  count=0

  ###ARGS ARE INTEGERS###
  case $site in
    1 | 2 | 3 | 4) check=0 ;;
    *) check=1 ;;
  esac

  if [ $check != 0 ]; then
    echo "Bad type of Args!"
    for_help
  fi

  #if [ "$site" != +([1-3]) ] | [ "$first" != +([0-9]) ] | [ "$last" != +([0-9]) ] | [ "$pages" != +([0-9]) ]; then
  #    echo "Bad Type Of Args!"
  #    for_help
  #fi

  ###WORK CHAPTER/VOLUME###
  for j in `seq $first $last`;
  do
      mkdir $j
      cd $j

  ###WORK PAGES###
      for i in `seq 0 $pages`;
      do

  ###PROPOTYPE LIEN###
      case $site in
        1) wget -nd -H -p -A jpg,jpeg,png -e robots=off "https://lecture-enligne.com/scan-$name-lecture-en-ligne/$j/$i" $> /dev/null ;;
        2) wget -nd -H -p -A jpg,jpeg,png -e robots=off "http://ww2.scan-vf.net/$name/chapitre-$j/$i" &> /dev/null ;;
        3) wget -nd -H -p -A jpg,jpeg,png -e robots=off "http://www.scan-fr.co/manga/$name/$j/$i" &> /dev/null ;;
        4) wget -nd -H -p -A jpg,jpeg,png -e robots=off "https://www.lelscan-vf.com/manga/$name/$j/$i" &> /dev/null ;;
      esac
      done

      cd ..
      zip -r $name$j.cbz $j $> /dev/null
      rm -rf $j
      if [ $first != 1 ]; then
  	  ((count++))
  	  echo -e "\e[1m\e[44m Finished file $count/$((last-first+1)) : $((count*100/(last-first+1)))% \e[0m"
      else
  	  echo -e "\e[1m\e[44m Finished file $j/$last : $((j*100/last))% \e[0m"
      fi
  done
  end
}

##multiRun

case $1 in
  "-h" | "--help") for_help ;;
  1) onlyOne ;;
  "-s" | "s") setVar ;;
  "-d" | "d") delVar ;;
  *) multiRun
esac